---
---

@import "header.css";
@import "footer.css";
@import "fonts.css";
@import "variables.css";

* {
  transition: background 0.25s, color 0.25s, border-color 0.25s;
}

html {
  background: var(--html-bg);
}

html,
body {
  margin: 0 auto;
}

hr {
	width: 60%;
	background: #ddd;
	height: 1px;
	margin: 1.5rem auto;
	border: none;
}

body {
  // Uppercase M because of Sass dumbness
  // See: https://css-tricks.com/when-sass-and-new-css-features-collide/
  //min-width: 1300px;
  //max-width: Min(100%, 1910px);

  background: var(--background);
  color: var(--font-color);
}

// https://codepen.io/kevinpowell/pen/ExrZrrw
.content-grid {
  --padding-inline: 0.5rem;

  --content-width: 900px;
  --quote-width: 850px;

  --content-size: calc(
    (var(--content-width) - var(--quote-width)) / 2
  );

  display: grid;
  grid-template-columns:
    [full-width-start] minmax(var(--padding-inline), 1fr)
    [content-start] minmax(0, var(--content-size))
    [quote-start] min( 100% - (var(--padding-inline) * 2), var(--quote-width)) [quote-end]
    minmax(0, var(--content-size)) [content-end]
    minmax(var(--padding-inline), 1fr) [full-width-end];
}

.content-grid > :not(.breakout, .full-width, blockquote),
.full-width > :not(.breakout, .full-width) {
  grid-column: content;
}

.content-grid > .breakout, .content-grid > blockquote {
  grid-column: quote;
}

.content-grid > .full-width {
  grid-column: full-width;

  display: grid;
  grid-template-columns: inherit;
}

img.full-width {
  width: 100%;
  max-height: 45vh;
  object-fit: cover;
}


#lightswitch {
  font-size: 2rem;
  opacity: 0.5;
  margin: 0;
  cursor: pointer;
  visibility: hidden;
  position: fixed;
  right: 10px;
  bottom: 5px;
}

@media (orientation: portrait) {
  body {
    width: 100%;
    max-width: 100%;
    min-width: 100%;
  }

  main {
    width: 95%;

    display: block;
  }
}
